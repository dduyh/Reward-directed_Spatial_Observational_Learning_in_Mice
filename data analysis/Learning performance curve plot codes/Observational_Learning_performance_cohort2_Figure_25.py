# -*- coding: utf-8 -*-
"""
Created on Wed May 17 22:22:47 2023

@author: yihui
"""

# %%
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import pyplot

# %%
plt.style.use('seaborn-whitegrid')
palette = pyplot.get_cmap('Set1')
font1 = {'family' : 'Times New Roman',
'weight' : 'normal',
'size'   : 32,
}

# %%
fig=plt.figure(figsize=(20,10))
# iters = list(range(7))
iters_obs = list([1, 7, 13, 19, 25])
iters_demo = list([2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24])

alldata1=[]  # Obs 
data=np.array([6.26840889289849,	4.03894436167505,	3.13553261769618,	2.35400952763094,	np.nan])
alldata1.append(data)
data=np.array([6.67574636678600,	11.1200262678583,	4.17925020534864,	2.22250905268166,	np.nan])
alldata1.append(data)
alldata1=np.array(alldata1)

alldata2=[]  # Demo 
data=np.array([2.41781812535270,	0.414063811585480,	1.89510226569125,	1.07419551872330,	1.38963351237642,	1.51287800446775,	1.07329066785520,	0.937504549030206,	1.83943494342839,	1.48355684554121,	0.845674857061003,	1.89720887142321,	1.05721129159084,	0.956911166823337,	0.878106207452013,	0.910285014926408,	1.57388707557938,	1.09608909766253,	1.74731906619151,	0.918670269593033])
alldata2.append(data)
data=np.array([2.22783334148452,	np.nan,	2.19086409432529,	2.29244122111854,	1.68875245838329,	2.20935446406338,	1.11871915223428,	1.15165919181104,	1.66515237523377,	0.927767787328206,	1.92017837015185,	0.840138777414592,	1.08350805756631,	2.68475679263715, 0.901806348747676,	1.73420054212314,	1.41559081862751,	1.75488583022516,	1.77328127067843,	1.51863271727191])
alldata2.append(data)
data=np.array([2.77751678955969,	0.571711843017729,	0.572025726042429,	1.46398923659997,	1.85778766648467,	0.819867458686696,	0.605045649572632,	1.67919996308198,	1.44248736608576,	2.04464638321466,	0.589094729730219,	0.570351856521944,	3.73350694125130,	0.696030150038077,	1.74726725241381,	1.17885751862020,	0.564665284284450,	0.597567289199800,	1.10600365236375,	0.610873996452966])
alldata2.append(data)
data=np.array([2.41781812535270,	2.62738372891061,	1.89043779395153,	1.37993694590040,	1.56418834353536,	2.81308173202996,	2.03405757794216,	2.15942778638788,	1.04471668252726,	1.52953697200157,	1.22550365638881,	2.05222819219430,	1.50842866572595,	0.441575019781944,	1.75666176517106,	2.16128793044843,	0.471282221325491,	0.857412230055328,	2.78209049586571,	0.839822482273787])
alldata2.append(data)
data=np.array([1.81162260364442,	0.643378249277895,	1.95083102167755,	1.48524893108804,	3.84929577654338,	3.84061142279689,	0.695575589349266,	0.640759470471011,	0.664474150849304,	0.700215906195539,	0.755244993094547,	0.657561337867853,	0.686672726270913,	0.670502913096870,	0.678806293811897,	0.619686477284964,	0.608740670332596,	0.614420613919648,	0.586120440705918,	0.621580559903115])
alldata2.append(data)
data=np.array([1.31124710185063,	0.614465852280824,	1.38614021422473,	1.75014945165420,	np.nan,	1.64680895993766,	0.719968801864069,	1.89800920521401,	1.60161635650178,	1.68133361567274,	0.733792437584902,	1.34083221372064,	0.755951228404345,	1.36944001306421,	0.641768852533314,	0.669141301442189,	0.639409254508954,	0.726756567950742,	2.03963032520232,	1.23425406887257])
alldata2.append(data)
data=np.array([2.11999179825191,	1.17421815373834,	1.89713471477824,	0.564190067684679,	0.567001910355943,	0.604823750388604,	1.75961451077860,	0.856451464937490,	0.655660780645253,	1.73830474011968,	np.nan,	2.29538269435324,	0.614893484415223,	0.562128505026115,	4.80155585362646,	1.83014190203979,	0.564004186603246,	1.80903616631640,	0.561818155922999,	0.618495781737067])
alldata2.append(data)
data=np.array([1.91219725307921,	1.67881571097394,	1.22331171383167,	2.36668389393168,	1.47301392377540,	1.61152644444592,	1.29191561777634,	1.88914993343891,	1.79230105784278,	2.63773870022035,	np.nan,	2.04385754595527,	1.27375276816143,	1.91964041983771,	3.42898890776408,	1.68783783500057,	2.36013724738596,	2.92958032750956,	1.98925858875336,	0.780300646517709])
alldata2.append(data)
data=np.array([3.16489699000023,	1.37246498449006,	2.21509096923804,	1.35304135520119,	1.57742073623089,	1.87182874636709,	3.68208398616555,	1.42135481634086,	1.80213260914355,	2.19447549995568,	2.68040921323521,	1.30003281179179,	3.03104783625853,	1.80813661073814,	1.21618322051848,	2.00550784062665,	1.76162501581755,	6.93225050593710,	1.73354255781082,	2.51974061380375])
alldata2.append(data)
data=np.array([0.914783803890107,	1.92730979796627,	1.14313266716333,	2.84535166088499,	1.22019177384561,	1.38923022955914,	1.16473969693521,	1.23420914165295,	1.25285098954882,	0.993043003857930,	1.09990059850719,	1.29750093565213,	2.51559921817241,	1.29761006720875,	1.26305973087758,	1.17676924647569,	1.42038280069428,	1.08152644825404,	2.24906617316748,	1.48292407774039])
alldata2.append(data)
data=np.array([2.76194920716335,	2.26794809701967,	1.39080247311519,	1.89886718066892,	1.61946625033832,	1.25422992932847,	2.43310217682406,	1.19951853160175,	1.66923838144079,	1.45393568907240,	np.nan,	1.53892566662882,	1.03741463153801,	1.49865733460012,	1.36431734078161,	1.31103553351899,	2.69538102481557,	2.06439899894537,	2.28433391461140,	1.49964404485697])
alldata2.append(data)
data=np.array([4.49444566310753,	2.11042528172398,	1.84139195347688,	1.51263979648877,	1.29246125521603,	1.82435665029054,	1.32480374928416,	1.70720858554195,	1.80185824747659,	4.11793255920009,	1.62003521270005,	1.68260975398118,	1.44646212000736,	1.92738422526788,	1.38447157396065,	1.41834393402096,	1.70274287060499,	1.72684956559800,	1.97344897289897,	2.42099465394973])
alldata2.append(data)
data=np.array([1.35478255271716,	1.21684820106621,	2.04152537395024,	2.88599935446851,	1.75748394333323,	1.59063931241611,	1.74038279120957,	1.49842619158473,	1.09656689672598,	1.38665458364621,	1.46074766160433,	1.20310013867844,	3.14634481047017,	1.49541152812641,	1.21371442617855,	2.80949847305402,	1.39783059420524,	1.32685679809954,	1.61205855809419,	1.54384897869104])
alldata2.append(data)
data=np.array([2.10268112479820,	1.45821658743747,	1.25749180380291,	3.11513970157669,	1.38096053436830,	1.44494124294961,	2.18014986519377,	2.44453033264978,	1.22266828688266,	1.16824636959286,	2.45153227766036,	1.43912364440613,	1.16583170681703,	1.18151734106383,	1.54044487018386,	np.nan,	np.nan,	np.nan,	1.08061759580677,	1.09056098937795])
alldata2.append(data)
alldata2=np.array(alldata2)

# %%
def draw_line(name_of_alg,color_index,datas,iters):
    color=palette(color_index)
    avg=np.nanmean(datas,axis=0)
    std=np.nanstd(datas,axis=0)
    r1 = list(map(lambda x: x[0]-x[1], zip(avg, std)))#上方差
    r2 = list(map(lambda x: x[0]+x[1], zip(avg, std)))#下方差
    plt.plot(iters, avg, color=color,label=name_of_alg,linewidth=3.5)
    plt.fill_between(iters, r1, r2, color=color, alpha=0.2)


draw_line("Observer",2,alldata1,iters_obs)
draw_line("Demo",1,alldata2,iters_demo)

plt.xticks(fontsize=22)
plt.yticks(fontsize=22)
plt.xlabel('Learning (no.trials)',fontsize=32)
plt.ylabel('Performance (distance, m)',fontsize=32)
plt.legend(loc='upper left',prop=font1)
plt.title("Observational Learning",fontsize=34)
plt.ylim(0, 15)


